<%- include("header") %>

   <section class="content-main">
      <div class="content-header">
         <div>
            <h2 class="content-title card-title">Sales Report</h2>
            <p>Lorem ipsum dolor sit amet.</p>
            
          </div>
          <div>
            <!-- <input type="text" placeholder="Search order ID" class="form-control bg-white"> -->
            <button onclick="downloadReport()" class="btn btn-primary">Download Report</button>
          </div>
        </div>
        <div class="pb-30" style="display: flex; justify-content: space-evenly;" id="filter_Btns">
          <button class="text-end btn btn-primary" id="customBtn">Custom</button>
          <button class="text-end btn btn-primary" id="dailyBtn">Daily</button>
          <button class="text-end btn btn-primary" id="weeklyBtn">Weekly</button>
          <button class="text-end btn btn-primary" id="monthlyBtn">Monthly</button>
          <button class="text-end btn btn-primary" id="yearlyBtn">Yearly</button>
        </div>

      <form class="pb-30" style="display: flex; display: none; justify-content: space-evenly;" id="select_Date">
        <div class="pb-30" style="display: flex; justify-content: space-evenly;">
          <label for="From">From</label>
          <input type="date" placeholder="Start Date" class="form-control" id="startDate" style="justify-content: space-between;">
          <label for="To">To</label>
          <input type="date" placeholder="End Date" class="form-control" id="endDate">
          <button class="text-end btn btn-primary" id="custom_Date_Submit" type="button" onclick="customDateSubmit()">Submit</button>
        </div>
      </form>
      
      <div class="card mb-4">
         <div class="card-body">
            <div class="table-responsive">
               <table class="table table-hover">
                  <thead>
                     <tr>
                        <th>#ID</th>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Total</th>
                        <th scope="col">Status</th>
                        <th scope="col">Date</th>
                     </tr>
                  </thead>
                  <tbody id="orderListContainer">
                  </tbody>
               </table>
            </div> <!-- table-responsive //end -->
         </div> <!-- card-body end// -->
      </div> <!-- card end -->

      <div class="pagination-area mt-30 mb-50" style="    display: flex;
      /* width: 108%; */
      align-items: center;
      justify-content: space-between;
  ">
         <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center" id="pagination" style="    flex-wrap: wrap;
            ">
               <% for (let i=1; i <=totalPages; i++) { %>
                  <li  class="page-items <%= i === page ? 'active' : '' %>">
                     <a class="page-link" href="javascript:void(0);" onclick="fetchOrders(i)">${i}</a>
                  </li>
                  <% } %>
            </ul>
         </nav>
      </div>     


   </section> <!-- content-main end// -->

   <%- include("footer") %>


   <script src="https://cdn.jsdelivr.net/npm/tableexport@5.2.0/dist/js/tableexport.bundle.min.js"></script>
   <script>
      $(document).ready(function() {
         $('#downloadTable').on('click', function() {
            // Fetches table and creates a TableExport instance
            var table = TableExport(document.getElementById('myTable'), {
               formats: ['xlsx'], // Can be CSV, XLS, or XLSX
               exportButtons: false
            });
   
            // Calls the exportToXLSX method to export table data as an Excel file
            var exportData = table.getExportData().myTable.xlsx;
            exportData.data = exportData.data.replace(/ /g, "%20");
            window.open(exportData.data, "_blank");
         });
      });
            function fetchOrders(page) {
            $.ajax({
               url: `/admin/orderList?page=${page}`,
               method: 'GET',
               dataType: 'json',
               headers: {
                  'X-Requested-With': 'XMLHttpRequest',
               },
               success: function (data) {
                  const orders = data.orders;
                  console.log("orders   ====>>>   ",orders);
                  $('#orderListContainer').empty();
                  orders.forEach(order => {
                     const orderRow = `
               <tr>
                  <td>${order.user_display_order_id || order._id}</td>
                  <td><b>${order.user_id.first_name} ${order.user_id.last_name}</b></td>
                  <td>${order.user_id.email}</td>
                  <td>$${order.total_amount}</td>
                  <td>
                     <span class="badge rounded-pill ${orderBadgeClass(order.order_status)}">
                        ${order.order_status}
                     </span>
                  </td>
                  <td>${order.created_on}</td>
               </tr>
            `;

                     $('#orderListContainer').append(orderRow);
                  });
                  updatePagination(data.totalPages, data.page);
               },
               error: function (error) {
                  console.error(error);
               },
            });
         }
         function orderBadgeClass(orderStatus) {
            switch (orderStatus) {
               case 'Pending':
                  return 'alert-warning';
               case 'Canceled':
               case 'Request Canceled':
                  return 'alert-danger';
               case 'Return Requested':
                  return 'alert-info';
               default:
                  return 'alert-success';
            }
         }

         function updatePagination(totalPages, currentPage) {
            console.log("currentPage   ====>>>  ",currentPage);
            console.log("totalPages   ====>>>  ",totalPages);


            const pagination = $('#pagination');
            localStorage.setItem('currentPage', currentPage);

            pagination.empty();
            for (let i = 1; i <= totalPages; i++) {
               const pageLink = `<li class="page-item ${i === currentPage ? 'active' : ''}">
               <a class="page-link" href="javascript:void(0);" onclick="fetchOrders(${i})">${i}</a>
            </li>`;
               pagination.append(pageLink);
            }
         }
         function downloadReport() {

          window.location.href = '/admin/downloadReport'

        }
         
         $(document).ready(function () {
            const currentPage = localStorage.getItem('currentPage');

            if (currentPage) {
               fetchOrders(parseInt(currentPage, 10));
            } else {
               fetchOrders(1);
            }
         });

    document.addEventListener('DOMContentLoaded', function() {
    const filterBtns = document.getElementById('filter_Btns');

    filterBtns.addEventListener('click', async function(event) {
        if (event.target.tagName === 'BUTTON' && event.target.id !== 'customBtn') {
            const clickedBtnId = event.target.id;
            
            const requestData = {
                buttonClicked: clickedBtnId
            };
            $.ajax({
                url: `/admin/salesReport`,
                method: 'GET',
                data: { requestData: JSON.stringify(requestData) },
                contentType: 'application/json',
                success: function (data) {
                    console.log('Data sent to the server:', data);
                    // Perform actions with the data received, if needed
                },
                error: function () {
                    console.error('Failed to send data to the server.');
                }
            });
            // try {
            //     const response = await fetch(`/admin/salesReport?requestData=${requestData}`, {
            //         method: 'GET',
            //         headers: {
            //             'Content-Type': 'application/json'
            //         },
            //     });

            //     if (response.ok) {
            //         const data = await response.json();
            //         console.log('Data sent to the server:', data);
            //         // Perform actions with the data received, if needed
            //     } else {
            //         console.error('Failed to send data to the server.');
            //     }
            // } catch (error) {
            //     console.error('Error:', error);
            // }
        }
    });
});


async function customDateSubmit() {
    const fromDate = document.getElementById('startDate').value;
    const toDate = document.getElementById('endDate').value;

    console.log("fromDate   ====>>>>   ", fromDate);
    console.log("toDate   ====>>>>   ", toDate);

    const requestData = {
        fromDate: fromDate,
        toDate: toDate,
        buttonClicked: "customBtn"
    };
          $.ajax({
          url: `/admin/salesReport`,
          method: 'GET',
          data: { requestData: JSON.stringify(requestData) },
          contentType: 'application/json',
          success: function (data) {
              console.log('Data sent to the server:', data);
              // Perform actions with the data received, if needed
          },
          error: function () {
              console.error('Failed to send data to the server.');
          }
      });
    // try {
    //     const response = await fetch(`/admin/salesReport?requestData=${requestData}`, {
    //         method: 'GET',
    //         headers: {
    //             'Content-Type': 'application/json'
    //         },
    //     });

    //     if (response.ok) {
    //         const data = await response.json();
    //         console.log('Data sent to the server:', data);
    //         // Perform actions with the data received, if needed
    //     } else {
    //         console.error('Failed to send data to the server.');
    //     }
    // } catch (error) {
    //     console.error('Error:', error);
    // }
}
          const customBtn = document.getElementById('customBtn');
          const filterBtnsDiv = document.getElementById('filter_Btns');
          const selectDateDiv = document.getElementById('select_Date');

          customBtn.addEventListener('click', async () => {
              filterBtnsDiv.style.display = 'none';
              selectDateDiv.style.display = 'block';
          });

</script>

